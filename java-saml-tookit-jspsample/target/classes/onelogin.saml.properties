#  If 'strict' is True, then the Java Toolkit will reject unsigned
#  or unencrypted messages if it expects them signed or encrypted
#  Also will reject the messages if not strictly follow the SAML
onelogin.saml2.strict =  false

# Enable debug mode (to print errors)
onelogin.saml2.debug =  false


#  Service Provider Data that we are deploying
#

#  Identifier of the SP entity  (must be a URI)
onelogin.saml2.sp.entityid = http://34.200.220.240:8080/java-saml-tookit-jspsample/metadata.jsp

# Specifies info about where and how the <AuthnResponse> message MUST be
#  returned to the requester, in this case our SP.
# URL Location where the <Response> from the IdP will be returned
onelogin.saml2.sp.assertion_consumer_service.url = http://34.200.220.240:8080/java-saml-tookit-jspsample/acs.jsp

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-POST binding only
onelogin.saml2.sp.assertion_consumer_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# Specifies info about where and how the <Logout Response> message MUST be
# returned to the requester, in this case our SP.
onelogin.saml2.sp.single_logout_service.url = http://34.200.220.240:8080/java-saml-tookit-jspsample/sls.jsp

# SAML protocol binding to be used when returning the <LogoutResponse> or sending the <LogoutRequest>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.sp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Specifies constraints on the name identifier to be used to
# represent the requested subject.
# Take a look on lib/Saml2/Constants.php to see the NameIdFormat supported
onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified

# Usually x509cert and privateKey of the SP are provided by files placed at
# the certs folder. But we can also provide them with the following parameters

onelogin.saml2.sp.x509cert =MIIDAzCCAeugAwIBAgIBATANBgkqhkiG9w0BAQsFADBFMRYwFAYDVQQDDA1hbWF6b25hd3MuY29tMQ0wCwYDVQQLDARJREFTMQ8wDQYDVQQKDAZBbWF6b24xCzAJBgNVBAYTAlVTMB4XDTE3MTIzMTE2MjA1MVoXDTIyMTIzMTE2MjA1MVowRTEWMBQGA1UEAwwNYW1hem9uYXdzLmNvbTENMAsGA1UECwwESURBUzEPMA0GA1UECgwGQW1hem9uMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIki7eZf9ElAOL8vz3My7luRfPn5IpXZfj3QZV90Pj7jctNmuaJByCO6PjNKasmxgwGw3OyHdhUU65ipUS6Q83hgxmC4DmI+xnoHxmLuogUtKS5hQ2toyaaGUGmvVfwa8qrZg5vdz6FPtWCOHfO0jk7vR1UfYK8IksJMwwOCpDrOfgdHydLjG01S8IdrLMpscWM768JzrJipcUQSpJvhQFoE7Iozxvu1XJPPMn9DPNzZPsWKItMnIKgRh3U0mbFP8SszchNdvGzp0jGU8tgPmPMdki/UjlcdU2E58e+umbnG5BNzaHEh6FDrgghFBPxTvooJthQFBMSKvlBCx4tS2NECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAgktZrqgfOHuLdmUcg6cOTBB1YZ21YGX2jR8rChBv58NesjX1RFXduxCpVzfXomc1i7CFiQa8DMeDzYreY6w49lnjtSQMXr9QKzS0Ek+9mHbxMPAgUXPHSzRFG7kw69gnBc3+1XkpStR9yYcuM7iP8GigDe+dvhFtyPZHP8jJ9wCYLzl0EsNWuoh4Rkm6Q/V7lQ5kbfcjzNrdY5VrYjBpWl27xrTX9wiQHqLuzFfRntyaQK7q9hl8HJQK/9+J3rv96DA9f+Z5A0HfelF+oLYXb3a56bJKyZXEbGwqaa6xNWtPYVmWK/IJczQRWeo/vMWlU4D2bFyjX070ykga7AR94A==

# Requires Format PKCS#8   BEGIN PRIVATE KEY	     
# If you have     PKCS#1   BEGIN RSA PRIVATE KEY  convert it by   openssl pkcs8 -topk8 -inform pem -nocrypt -in sp.rsa_key -outform pem -out sp.pem
onelogin.saml2.sp.privatekey =MIIEpAIBAAKCAQEAnU6r1QvcltCGRy9OjImDybya+GscX5IkImJH3YdpJ4YvtHh8TJAcRnUR5AjE5dXLOheEVxHvOX+pd0pQpJfaAk9EEZjtzP08W6G22Semtjnl4uoOxRMs5GUs/HEKHrbF3bYRXaSfLqvfS4v+JIZnarhqgEE9wEUW1VDI2qnKyRebCMmZ7fdIRfUPj8gjBgTVDusFGkC/Wz2S7i9NetmX75O8tDIazF2vgL1unMTY8RbOohuR5Cj2Hb2LKMrzDC/Z815USoMuyXCN1l3cU8O0P/LcI3zshenbIkDh91iVdEfxCcGFpZya8RUYOnsC9PLTbZu56CwNCoiVaUMgo1gkeQIDAQABAoIBABXXsqxmdT7LvZlszC9feNkuQyZzWQE8PaA4nVn5T3SZgU5B3KCU8hgmcVGEljKDuTBby5h7eQg23cUeoIv6Od9QOldnML3h+9uNXOJSSyfKak1TyrE6tGUSV2jGGW2iW18pxMeH8EJ+wwaubZ+Muhdre/5LENP9w+niycDzCqFZWfoehu0mHDgERs8i0/fUA6BZi1OHioeSupoGByoS924e6o5VlV+eKDkZ0+yFGJyU35oe6Aqzjuhja5Zoe/Ul9OPU+pTx1UOLjrPpeK1Gosuz092l/ov+2uCAxxN98bxOijdNDnM+8zBnFDMp4ivR42Dg4Xhd++ZHPpOj/krPd3ECgYEA0VY7WaSL96WJ58j4muEF17BeORH5o6ND+CGc+NlfmQHo3U45Sp0BKKBbdMq7Ech3N8OD83QyjVMsXyjkdtYozOfCIIRPN+zMFSoDxvzyUD11YjEuPQyE+O1dR0lU7ggNo3CSyzDkx6jtfvk5aMYAoMMHrZAvaHGsCXpbieOTNXcCgYEAwF9iOTTo+DuUfGnt8H7LIUFfWFLqU+UQKVmp0L7mF6diYsuUjzkNT98WVB0th6Vf5MRNg9Xsdi79Fh4rD3atTylDzN646N6lFVOQFHliGVaWPppe/xZxZ+hEgJDXSJx+iUx1kkZuDSOhyVqELlWKlSmdUmnIFcrZCMHvEuaKsY8CgYEAwZLVyu0HqPbgcP88NCvEtVCXsHpYt+KvZXHfr5WCewBzDsHY5JAOlDzElVkqZyVSaLRY/fUDEgBJVa2ApgsfK2tb7amrf3FuvltdptIcV+qc8zG7KiS7iVwlF1hOOtYjlnDwrQgHZkFlbDaVybbeucne/bYIwLHsfc8xem6An70CgYEAlhVUkoEfCRuimvYh9rFVVRqlgkkeHFnno/saK4vkA6xJa/6cZqkCI8BOsU0aSmvRRq+IMkTh+MpsFadvvN7AE7SD+wAAj120udC55d9Vk6MkEK9rUeR2kbR6TTuzWikN55xJVdew4HteK7N80JFYT0tqO/PfcHETpmt3U+2dYy0CgYBKTmF4lO1Xckdw0ng6SVazupEuW3Qj9YmZvKtDNGkOjGOH3V4fYZJZt6Mdb8WMBsQpyR6G/+2jKA85b1C17JVSKCQqLkdPSB6d0aUJhQbjIGLuwemcQJIYbzRDC0fPgVSGCV9FJllVscm3uI5p+T0mshsPfTa7vQSOiQxLSqnVrw==
# Identity Provider Data that we want connect with our SP
#

# Identifier of the IdP entity  (must be a URI)
#onelogin.saml2.idp.entityid =https://portal.sso.us-east-1.amazonaws.com/saml/assertion/MTQ4NjU0MjY3MDI1X2lucy1lNTE3OTY2MmYwOWFlNjhl
#onelogin.saml2.idp.entityid=https://idexcel-msp-poc.awsapps.com/start
onelogin.saml2.idp.entityid=https://app.onelogin.com/saml/metadata/744476
# SSO endpoint info of the IdP. (Authentication Request protocol)
# URL Target of the IdP where the SP will send the Authentication Request Message
#onelogin.saml2.idp.single_sign_on_service.url =https://portal.sso.us-east-1.amazonaws.com/saml/assertion/MTQ4NjU0MjY3MDI1X2lucy1lNTE3OTY2MmYwOWFlNjhl
onelogin.saml2.idp.single_sign_on_service.url=https://idexcel-cmp-poc.onelogin.com/trust/saml2/http-post/sso/744476
# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_sign_on_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# SLO endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Request
onelogin.saml2.idp.single_logout_service.url =https://idexcel-cmp-poc.onelogin.com/trust/saml2/http-redirect/slo/744476

# Optional SLO Response endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Response. If left blank, same URL as onelogin.saml2.idp.single_logout_service.url will be used.
# Some IdPs use a separate URL for sending a logout request and response, use this property to set the separate response url
onelogin.saml2.idp.single_logout_service.response.url =

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Public x509 certificate of the IdP
onelogin.saml2.idp.x509cert =MIIEFzCCAv+gAwIBAgIUdAfez1Pax0Qu5PfKXUOWrqlcNGMwDQYJKoZIhvcNAQEFBQAwWDELMAkGA1UEBhMCVVMxEDAOBgNVBAoMB0lkZXhjZWwxFTATBgNVBAsMDE9uZUxvZ2luIElkUDEgMB4GA1UEAwwXT25lTG9naW4gQWNjb3VudCAxMjA1NjUwHhcNMTgwMTExMTkyNzI3WhcNMjMwMTExMTkyNzI3WjBYMQswCQYDVQQGEwJVUzEQMA4GA1UECgwHSWRleGNlbDEVMBMGA1UECwwMT25lTG9naW4gSWRQMSAwHgYDVQQDDBdPbmVMb2dpbiBBY2NvdW50IDEyMDU2NTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK29fyZlSQqCNaXqC6rwX/Ig5v11srTgZOiomG30pfV6sl0kTbIHD1Y9m/ZUgsGKw5tzp8+sh8uFsj51MC5I3+yR0RddH7uJdbFmQz+oPYySBAbNgnS0yMHKU47ZMhJr13JuRcP5gAzXW4AsmTUyHA6AqRiGhN8/VbPp7L5ws2Hl0D9Xj4uh46B43S7p/Gd9i/gwIJ6xDCy3Ah7uBfsX2I+3TKGgRVVPQPFS42tOBIbo0Xjdx6fb3XI9GEJNyW2FuIhYiuA3uaN7iTO0bOE5ZgMTjnJK2tqMPeaV/YgDIMRFD3FXPrNVJJmCsSVLVxc+34ukeUNLqJ7jobsnekeNcQMCAwEAAaOB2DCB1TAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBRqdRMwpeEquzDYExbsrV8bd+ZkyjCBlQYDVR0jBIGNMIGKgBRqdRMwpeEquzDYExbsrV8bd+ZkyqFcpFowWDELMAkGA1UEBhMCVVMxEDAOBgNVBAoMB0lkZXhjZWwxFTATBgNVBAsMDE9uZUxvZ2luIElkUDEgMB4GA1UEAwwXT25lTG9naW4gQWNjb3VudCAxMjA1NjWCFHQH3s9T2sdELuT3yl1Dlq6pXDRjMA4GA1UdDwEB/wQEAwIHgDANBgkqhkiG9w0BAQUFAAOCAQEAECb8p4WDHgfnTarSh0phYfpkcooIWpjr9BQJs9LE8BtxgN5Yght0cONcTCEAWV1QIAT7SCP0kYp/8zNG8N1O/pu7gGhD8PjmxnpD+ib4jra8t96QA9mj1A9pEDxvjtjFt1ANfJdaZgwqYoik28VkoGdvMIDDBc/Mag1CvPKLd/m1vmLKsB+efB6+TuIHxYoCGWTJVe6koo7i0NEvaz6cwz1+STE3VfLN7Q+2JksjcbSmasW54QOcMZEJKQK8RDlM1A4O9Ps8hSByBJybuEU3smJ0gCtHkKZJCBu5b/vkUCJjnXtJWOH7j895WsjyeOMlyZTt7Qx0v+SS9D4hkBpUVQ==

# Instead of use the whole x509cert you can use a fingerprint
# (openssl x509 -noout -fingerprint -in "idp.crt" to generate it,
# or add for example the -sha256 , -sha384 or -sha512 parameter)
#
# If a fingerprint is provided, then the certFingerprintAlgorithm is required in order to
# let the toolkit know which Algorithm was used. Possible values: sha1, sha256, sha384 or sha512
# 'sha1' is the default value.
# onelogin.saml2.idp.certfingerprint = 
# onelogin.saml2.idp.certfingerprint_algorithm = sha1


# Security settings
#

# Indicates that the nameID of the <samlp:logoutRequest> sent by this SP
# will be encrypted.
onelogin.saml2.security.nameid_encrypted = false

# Indicates whether the <samlp:AuthnRequest> messages sent by this SP
# will be signed.              [The Metadata of the SP will offer this info]
onelogin.saml2.security.authnrequest_signed = false

# Indicates whether the <samlp:logoutRequest> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutrequest_signed = false

# Indicates whether the <samlp:logoutResponse> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutresponse_signed = false

# Sign the Metadata
# Empty means no signature, or comma separate the keyFileName and the certFileName
onelogin.saml2.security.want_messages_signed = 

# Indicates a requirement for the <samlp:Response>, <samlp:LogoutRequest> and
# <samlp:LogoutResponse> elements received by this SP to be signed.
onelogin.saml2.security.want_assertions_signed = false

# Indicates a requirement for the Metadata of this SP to be signed.
# Right now supported null (in order to not sign) or true (sign using SP private key) 
onelogin.saml2.security.sign_metadata = 

# Indicates a requirement for the Assertions received by this SP to be encrypted
onelogin.saml2.security.want_assertions_encrypted = false

# Indicates a requirement for the NameID received by this SP to be encrypted
onelogin.saml2.security.want_nameid_encrypted = false

# Authentication context.
# Set Empty and no AuthContext will be sent in the AuthNRequest,
# Set comma separated values urn:oasis:names:tc:SAML:2.0:ac:classes:urn:oasis:names:tc:SAML:2.0:ac:classes:Password
onelogin.saml2.security.requested_authncontext = urn:oasis:names:tc:SAML:2.0:ac:classes:urn:oasis:names:tc:SAML:2.0:ac:classes:Password

# Allows the authn comparison parameter to be set, defaults to 'exact'
onelogin.saml2.security.onelogin.saml2.security.requested_authncontextcomparison = exact


# Indicates if the SP will validate all received xmls.
# (In order to validate the xml, 'strict' and 'wantXMLValidation' must be true).
onelogin.saml2.security.want_xml_validation = true

# Algorithm that the toolkit will use on signing process. Options:
#  'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
#  'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
onelogin.saml2.security.signature_algorithm = http://www.w3.org/2000/09/xmldsig#rsa-sha1

# Organization
onelogin.saml2.organization.name = SP Java 
onelogin.saml2.organization.displayname = SP Java Example
onelogin.saml2.organization.url = http://sp.example.com
onelogin.saml2.organization.lang = 

# Contacts
onelogin.saml2.contacts.technical.given_name = Technical Guy
onelogin.saml2.contacts.technical.email_address = technical@example.com
onelogin.saml2.contacts.support.given_name = Support Guy
onelogin.saml2.contacts.support.email_address = support@@example.com
